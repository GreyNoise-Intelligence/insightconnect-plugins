# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create account with admin user"


class Input:
    ACCOUNT_TYPE = "account_type"
    EXPIRATION = "expiration"
    EXTERNAL_ID = "external_id"
    INHERITS = "inherits"
    NAME = "name"
    POLICY = "policy"
    SKUS = "skus"
    UNLIMITED_EXPIRATION = "unlimited_expiration"
    USER = "user"
    

class Output:
    SUCCESS = "success"
    

class CreateAdminAccountInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "account_type": {
      "type": "string",
      "title": "Account type",
      "description": "Account type. Example Trial",
      "enum": [
        "Trial",
        "Paid"
      ],
      "order": 1
    },
    "expiration": {
      "type": "string",
      "title": "Expiration",
      "description": "When account should expire, example: 2018-02-27T04:49:26.257525Z",
      "order": 2
    },
    "external_id": {
      "type": "string",
      "title": "External ID",
      "description": "External ID of CRM system",
      "order": 5
    },
    "inherits": {
      "type": "string",
      "title": "Inherits Policy",
      "description": "True if the policy is inherited from Tenant, False if the account has its own edited policy",
      "order": 9
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "User name",
      "order": 8
    },
    "policy": {
      "type": "object",
      "title": "Policy",
      "description": "Policy is mandatory if inherits is false, else it will be ignored",
      "order": 6
    },
    "skus": {
      "type": "array",
      "title": "SKUs",
      "description": "The list of allowed SKUs for the account",
      "items": {
        "$ref": "#/definitions/skus"
      },
      "order": 4
    },
    "unlimited_expiration": {
      "type": "boolean",
      "title": "Unlimited Expiration",
      "description": "Is expiration unlimited, if not expiration should be supplied",
      "order": 7
    },
    "user": {
      "$ref": "#/definitions/admin_account_user",
      "title": "User",
      "description": "The data of the admin user been created",
      "order": 3
    }
  },
  "required": [
    "account_type",
    "inherits",
    "name",
    "skus",
    "user"
  ],
  "definitions": {
    "admin_account_user": {
      "type": "object",
      "title": "admin_account_user",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "order": 5
        },
        "fullName": {
          "type": "string",
          "title": "Full Name",
          "order": 6
        },
        "id": {
          "type": "string",
          "title": "ID",
          "order": 3
        },
        "password": {
          "type": "string",
          "title": "Password",
          "displayType": "password",
          "format": "password",
          "order": 2
        },
        "primaryTwoFaMethod": {
          "type": "string",
          "title": "Primary Two Factor Method",
          "order": 1
        },
        "twoFaEnabled": {
          "type": "boolean",
          "title": "Two Factor enabled",
          "order": 4
        }
      },
      "required": [
        "email",
        "fullName",
        "password"
      ]
    },
    "skus": {
      "type": "object",
      "title": "skus",
      "properties": {
        "totalLicenses": {
          "type": "integer",
          "title": "Total Licenses",
          "description": "Number of licenses for this specific SKU. Applicable only if unlimited is False",
          "order": 1
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The suite of product features active for this account",
          "enum": [
            "Core",
            "Complete"
          ],
          "order": 3
        },
        "unlimited": {
          "type": "boolean",
          "title": "Unlimited",
          "description": "True if this is an unlimited SKU. Total licenses will be ignored if unlimited is True",
          "order": 2
        }
      },
      "required": [
        "unlimited"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateAdminAccountOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Indicates a successful operation",
      "order": 1
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
