# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Trigger a GreyNoise Alert based on IP List every interval"


class Input:
    INTERVAL = "interval"
    IP_LIST = "ip_list"
    LOOKBACK_DAYS = "lookback_days"


class Output:
    IP_LIST = "ip_list"


class GreynoiseAlertInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "How frequently (in seconds) to trigger a greeting",
      "default": 3600,
      "order": 1
    },
    "ip_list": {
      "type": "array",
      "title": "List of IPs",
      "description": "List of IP Addresses or CIDR blocks to check for scanning activity",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "lookback_days": {
      "type": "integer",
      "title": "Number of days",
      "description": "Number of Days to look back for scanning activity",
      "default": 1,
      "order": 3
    }
  },
  "required": [
    "interval",
    "ip_list",
    "lookback_days"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GreynoiseAlertOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "ip_list": {
      "type": "array",
      "title": "List of IPs",
      "description": "The list of IPs that were found scanning",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "ip_list"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
