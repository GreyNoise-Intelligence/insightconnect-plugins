# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "identify if an account has seen a specific file hash within mesasges over the last year. A maximum of 100 hashes can be submitted in a single call. Currently this action does not support image file hashes"


class Input:
    HASHES = "hashes"
    

class Output:
    FAILED_HASHES = "failed_hashes"
    HASH_STATUS = "hash_status"
    

class SearchFileHashInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "hashes": {
      "type": "array",
      "title": "Hashes",
      "description": "List of file hashes to determine if they have been seen within an account",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "hashes"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchFileHashOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "failed_hashes": {
      "type": "array",
      "title": "Failed Hashes",
      "description": "List of hashses that failed verification",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "hash_status": {
      "type": "array",
      "title": "Hash Status",
      "description": "List of hashes that were deteced within account",
      "items": {
        "$ref": "#/definitions/hash_status"
      },
      "order": 2
    }
  },
  "required": [
    "failed_hashes",
    "hash_status"
  ],
  "definitions": {
    "hash_status": {
      "type": "object",
      "title": "hash_status",
      "properties": {
        "detected": {
          "type": "boolean",
          "title": "Detected",
          "description": "Presence of hash within account",
          "order": 1
        },
        "hash": {
          "type": "boolean",
          "title": "Hash",
          "description": "File hash value",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
