# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get Incidents"


class Input:
    
    TIME_FIELD = "time_field"
    

class Output:
    
    INCIDENT = "incident"
    

class GetIncidentsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "time_field": {
      "type": "string",
      "title": "Time Field",
      "description": "Which time field to filter and sort on",
      "enum": [
        "modification_time",
        "creation_time"
      ],
      "order": 1
    }
  },
  "required": [
    "time_field"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetIncidentsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "incident": {
      "$ref": "#/definitions/incident",
      "title": "Incident",
      "description": "Incident",
      "order": 1
    }
  },
  "definitions": {
    "incident": {
      "type": "object",
      "title": "incident",
      "properties": {
        "alert_count": {
          "type": "integer",
          "title": "Alert Count",
          "description": "Alert Count",
          "order": 11
        },
        "assigned_user_mail": {
          "type": "string",
          "title": "Assigned User Mail",
          "description": "Assigned User Mail",
          "order": 9
        },
        "assigned_user_pretty_name": {
          "type": "string",
          "title": "Assigned User Pretty Name",
          "description": "Assigned User Pretty Name",
          "order": 10
        },
        "creation_time": {
          "type": "integer",
          "title": "Creation Time",
          "description": "Creation Time",
          "order": 3
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description",
          "order": 8
        },
        "detection_time": {
          "type": "integer",
          "title": "Detection Time",
          "description": "Detection Time",
          "order": 5
        },
        "high_severity_alert_count": {
          "type": "integer",
          "title": "High Severity Alert Count",
          "description": "High Severity Alert Count",
          "order": 14
        },
        "host_count": {
          "type": "integer",
          "title": "Host Count",
          "description": "Host Count",
          "order": 16
        },
        "hosts": {
          "type": "array",
          "title": "Hosts",
          "description": "Hosts",
          "items": {
            "type": "string"
          },
          "order": 23
        },
        "incident_id": {
          "type": "string",
          "title": "Incident ID",
          "description": "Incident ID",
          "order": 1
        },
        "incident_name": {
          "type": "string",
          "title": "Incident Name",
          "description": "Incident Name",
          "order": 2
        },
        "incident_sources": {
          "type": "array",
          "title": "Incident Sources",
          "description": "Incident Sources",
          "items": {
            "type": "string"
          },
          "order": 25
        },
        "low_severity_alert_count": {
          "type": "integer",
          "title": "Low Severity Alert Count",
          "description": "Low Severity Alert Count",
          "order": 12
        },
        "manual_description": {
          "type": "string",
          "title": "Manual Description",
          "description": "Manual Description",
          "order": 20
        },
        "manual_score": {
          "type": "integer",
          "title": "Manual Score",
          "description": "Manual Score",
          "order": 27
        },
        "manual_severity": {
          "type": "string",
          "title": "Manual Severity",
          "description": "Manual Severity",
          "order": 19
        },
        "med_severity_alert_count": {
          "type": "integer",
          "title": "Med Severity Alert Count",
          "description": "Med Severity Alert Count",
          "order": 13
        },
        "modification_time": {
          "type": "integer",
          "title": "Modification Time",
          "description": "Modification Time",
          "order": 4
        },
        "notes": {
          "type": "string",
          "title": "Notes",
          "description": "Notes",
          "order": 17
        },
        "resolve_comment": {
          "type": "string",
          "title": "Resolve Comment",
          "description": "Resolve Comment",
          "order": 18
        },
        "rule_based_score": {
          "type": "integer",
          "title": "Rule Based Score",
          "description": "Rule Based Score",
          "order": 26
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Severity",
          "order": 7
        },
        "starred": {
          "type": "boolean",
          "title": "Starred",
          "description": "Starred",
          "order": 22
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status",
          "order": 6
        },
        "user_count": {
          "type": "integer",
          "title": "User Count",
          "description": "User Count",
          "order": 15
        },
        "users": {
          "type": "array",
          "title": "Users",
          "description": "Users",
          "items": {
            "type": "string"
          },
          "order": 24
        },
        "xdr_url": {
          "type": "string",
          "title": "XDR URL",
          "description": "XDR URL",
          "order": 21
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
